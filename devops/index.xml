<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on bits-pieces</title><link>https://l10178.github.io/bits-pieces/devops/</link><description>Recent content in DevOps on bits-pieces</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 19 Mar 2021 23:54:37 +0800</lastBuildDate><atom:link href="https://l10178.github.io/bits-pieces/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL5.7升级至8.0</title><link>https://l10178.github.io/bits-pieces/devops/mysql5.7to8.0/</link><pubDate>Wed, 29 Dec 2021 23:54:37 +0800</pubDate><guid>https://l10178.github.io/bits-pieces/devops/mysql5.7to8.0/</guid><description>MySQL 5.7 升级至 8.0，程序适配以及踩坑记录。
代码适配方案 mysql-connector-java.jar 升级到 8.0.21 版本。 com.mysql.jdbc.Driver 更换为 com.mysql.cj.jdbc.Driver。 链接 url 里指定 useSSL=false。 链接 url 中显式指定时区，增加 serverTimezone=Asia/Shanghai。 兼容性问题 com.mysql.jdbc.exceptions.jdbc4 在 MySQL Connector 8 中不存在。
将 mysql-connector-java 版本，升级到 8.0 后，如果项目中有使用 mysql 的 Exception 类，编译时会收到以下错误
error: package com.mysql.jdbc.exceptions.jdbc4 does not exist [ERROR] import com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException; [ERROR] import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException; MySQL 在 8.0 版本重用了现有的 java.sql 异常类，取消了 exceptions.jdbc4 的异常类，整改的异常映射关系如下。
5.7 版本异常类 8.0 版本异常类 com.</description></item><item><title>MySQL大文件导入优化</title><link>https://l10178.github.io/bits-pieces/devops/mysql-large-import/</link><pubDate>Wed, 29 Dec 2021 23:54:37 +0800</pubDate><guid>https://l10178.github.io/bits-pieces/devops/mysql-large-import/</guid><description>项目中需要根据SQL文件导入数据，文件大约20G，正常导入约需要2小时，如何加快导入速度。
如果一个SQL文件只有一个表的数据，可以直接使用mysql load data infile 语法，速度比较快。
我们是一个SQL文件包含了很多表，导入过程经过如下设置，20G大约需要40分钟。
# 进入mysql mysql -u root -p # 创建数据库（如果已经有数据库忽略此步骤） CREATE DATABASE 数据库名; # 设置参数 set sql_log_bin=OFF;//关闭日志 set autocommit=0;//关闭autocommit自动提交模式 0是关闭 1 是开启（默认） set global max_allowed_packet = 20 *1024* 1024 * 1024; # 使用数据库 use 数据库名; # 开启事务 START TRANSACTION; # 导入SQL文件并COMMIT（因为导入比较耗时，导入和COMMIT一行命令） source 文件的路径; COMMIT;</description></item></channel></rss>